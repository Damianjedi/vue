{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Posts\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Add Post\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  key: 0,\n  class: \"error\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.createPost && $options.createPost(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newPostContent = $event),\n    placeholder: \"Write a new post...\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newPostContent]]), _hoisted_2], 32 /* NEED_HYDRATION */), $data.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString($data.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.posts, post => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: post.id,\n      class: \"post\"\n    }, [_createElementVNode(\"p\", null, _toDisplayString(post.content), 1 /* TEXT */), _createElementVNode(\"small\", null, \"Posted by \" + _toDisplayString(post.user.email) + \" on \" + _toDisplayString(post.createdAt), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["_createElementVNode","type","key","class","_createElementBlock","_hoisted_1","onSubmit","_cache","_withModifiers","args","$options","createPost","$event","$data","newPostContent","placeholder","_hoisted_2","error","_hoisted_3","_toDisplayString","_createCommentVNode","_Fragment","_renderList","posts","post","id","content","user","email","createdAt"],"sources":["C:\\Users\\Damian\\Desktop\\vue\\elearning-frontend\\src\\components\\Home.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Posts</h1>\r\n    <form @submit.prevent=\"createPost\">\r\n      <textarea v-model=\"newPostContent\" placeholder=\"Write a new post...\"></textarea>\r\n      <button type=\"submit\">Add Post</button>\r\n    </form>\r\n    <div v-if=\"error\" class=\"error\">{{ error }}</div>\r\n    <div v-for=\"post in posts\" :key=\"post.id\" class=\"post\">\r\n      <p>{{ post.content }}</p>\r\n      <small>Posted by {{ post.user.email }} on {{ post.createdAt }}</small>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name:'HomePage',\r\n  data() {\r\n    return {\r\n      posts: [],\r\n      newPostContent: '',\r\n      error: ''\r\n    };\r\n  },\r\n  async created() {\r\n    await this.fetchPosts();\r\n  },\r\n  methods: {\r\n    async fetchPosts() {\r\n      try {\r\n        const response = await axios.get('https://localhost:7153//api/elearning/posts');\r\n        this.posts = response.data;\r\n      } catch (error) {\r\n        this.error = 'Error fetching posts';\r\n      }\r\n    },\r\n    async createPost() {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await axios.post('https://localhost:7153//api/elearning/posts', { content: this.newPostContent }, {headers: {Authorization: `Bearer ${token}`}});\r\n        this.posts.push(response.data);\r\n        this.newPostContent = '';\r\n      } catch (error) {\r\n        this.error = 'Error creating post';\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.post {\r\n  border: 1px solid #ccc;\r\n  padding: 1rem;\r\n  margin: 1rem 0;\r\n}\r\n\r\n.error {\r\n  color: red;\r\n}\r\n</style>\r\n"],"mappings":";gCAEIA,mBAAA,CAAc,YAAV,OAAK;gCAGPA,mBAAA,CAAuC;EAA/BC,IAAI,EAAC;AAAQ,GAAC,UAAQ;;EALpCC,GAAA;EAOsBC,KAAK,EAAC;;;uBAN1BC,mBAAA,CAWM,cAVJC,UAAc,EACdL,mBAAA,CAGO;IAHAM,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAHjBC,cAAA,KAAAC,IAAA,KAG2BC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;sBAC/BT,mBAAA,CAAgF;IAJtF,uBAAAO,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAIyBC,KAAA,CAAAC,cAAc,GAAAF,MAAA;IAAEG,WAAW,EAAC;iDAA5BF,KAAA,CAAAC,cAAc,E,GACjCE,UAAuC,C,4BAE9BH,KAAA,CAAAI,KAAK,I,cAAhBb,mBAAA,CAAiD,OAAjDc,UAAiD,EAAAC,gBAAA,CAAdN,KAAA,CAAAI,KAAK,oBAP5CG,mBAAA,iB,kBAQIhB,mBAAA,CAGMiB,SAAA,QAXVC,WAAA,CAQwBT,KAAA,CAAAU,KAAK,EAAbC,IAAI;yBAAhBpB,mBAAA,CAGM;MAHsBF,GAAG,EAAEsB,IAAI,CAACC,EAAE;MAAEtB,KAAK,EAAC;QAC9CH,mBAAA,CAAyB,WAAAmB,gBAAA,CAAnBK,IAAI,CAACE,OAAO,kBAClB1B,mBAAA,CAAsE,eAA/D,YAAU,GAAAmB,gBAAA,CAAGK,IAAI,CAACG,IAAI,CAACC,KAAK,IAAG,MAAI,GAAAT,gBAAA,CAAGK,IAAI,CAACK,SAAS,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}