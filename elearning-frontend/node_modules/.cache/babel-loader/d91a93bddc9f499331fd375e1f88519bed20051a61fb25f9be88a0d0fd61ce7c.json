{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"mainSection\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Posty\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Opublikuj\", -1 /* HOISTED */);\nconst _hoisted_4 = {\n  key: 0,\n  class: \"error\"\n};\nconst _hoisted_5 = [\"onSubmit\"];\nconst _hoisted_6 = [\"onUpdate:modelValue\"];\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Opublikuj\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.createPost && $options.createPost(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newPostContent = $event),\n    placeholder: \"Napisz post...\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newPostContent]]), _hoisted_3], 32 /* NEED_HYDRATION */), $data.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _toDisplayString($data.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.posts, post => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: post.id,\n      class: \"post\"\n    }, [_createElementVNode(\"p\", null, _toDisplayString(post.content), 1 /* TEXT */), _createElementVNode(\"small\", null, \"Opublikowano przez \" + _toDisplayString(post.user.firstName) + \" dnia \" + _toDisplayString(post.createdAt), 1 /* TEXT */), _createElementVNode(\"form\", {\n      onSubmit: _withModifiers($event => $options.createComment(post.id), [\"prevent\"])\n    }, [_withDirectives(_createElementVNode(\"textarea\", {\n      \"onUpdate:modelValue\": $event => $data.newCommentContent[post.id] = $event,\n      placeholder: \"Napisz komentarz...\"\n    }, null, 8 /* PROPS */, _hoisted_6), [[_vModelText, $data.newCommentContent[post.id]]]), _hoisted_7], 40 /* PROPS, NEED_HYDRATION */, _hoisted_5), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(post.comments, comment => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: comment.id,\n        class: \"comment\"\n      }, [_createElementVNode(\"p\", null, _toDisplayString(comment.content), 1 /* TEXT */), _createElementVNode(\"small\", null, \"Skomentowano przez \" + _toDisplayString(comment.user.firstName) + \" dnia \" + _toDisplayString(comment.createdAt), 1 /* TEXT */)]);\n    }), 128 /* KEYED_FRAGMENT */))]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementVNode","type","key","_createElementBlock","_hoisted_1","_hoisted_2","onSubmit","_cache","_withModifiers","args","$options","createPost","$event","$data","newPostContent","placeholder","_hoisted_3","error","_hoisted_4","_toDisplayString","_createCommentVNode","_Fragment","_renderList","posts","post","id","content","user","firstName","createdAt","createComment","newCommentContent","_hoisted_6","_hoisted_7","_hoisted_5","comments","comment"],"sources":["C:\\Users\\Damian\\Desktop\\vue\\elearning-frontend\\src\\components\\Home.vue"],"sourcesContent":["<template>\r\n  <div class=\"mainSection\">\r\n    <h1>Posty</h1>\r\n    <form @submit.prevent=\"createPost\">\r\n      <textarea v-model=\"newPostContent\" placeholder=\"Napisz post...\"></textarea>\r\n      <button type=\"submit\">Opublikuj</button>\r\n    </form>\r\n    <div v-if=\"error\" class=\"error\">{{ error }}</div>\r\n    <div v-for=\"post in posts\" :key=\"post.id\" class=\"post\">\r\n      <p>{{ post.content }}</p>\r\n      <small>Opublikowano przez {{ post.user.firstName }} dnia {{ post.createdAt }}</small>\r\n      <form @submit.prevent=\"createComment(post.id)\">\r\n        <textarea v-model=\"newCommentContent[post.id]\" placeholder=\"Napisz komentarz...\"></textarea>\r\n        <button type=\"submit\">Opublikuj</button>\r\n      </form>\r\n      <div v-for=\"comment in post.comments\" :key=\"comment.id\" class=\"comment\">\r\n        <p>{{ comment.content }}</p>\r\n        <small>Skomentowano przez {{ comment.user.firstName }} dnia {{ comment.createdAt }}</small>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { format } from 'date-fns';\r\n\r\nexport default {\r\n  name:'HomePage',\r\n  data() {\r\n    return {\r\n      posts: [],\r\n      newPostContent: '',\r\n      newCommentContent: {},\r\n      error: ''\r\n    };\r\n  },\r\n  async created() {\r\n    await this.fetchPosts();\r\n  },\r\n  methods: {\r\n    formatDate(date) {\r\n      return format(new Date(date), 'dd.MM.yyyy HH:mm')\r\n    },\r\n    async fetchPosts() {\r\n      try {\r\n        const response = await axios.get('https://localhost:7153/api/elearning/posts');\r\n        this.posts = response.data;\r\n      } catch (error) {\r\n        this.error = 'Error fetching posts';\r\n        console.error(error);\r\n      }\r\n    },\r\n    async createPost() {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n          this.error = 'You must be logged in to create a post';\r\n          return;\r\n        }\r\n        const response = await axios.post('https://localhost:7153/api/elearning/posts', \r\n          {Content: this.newPostContent }, \r\n          {headers: {Authorization: `Bearer ${token}` } }\r\n          );\r\n        this.posts.push(response.data);\r\n        this.newPostContent = '';\r\n      } catch (error) {\r\n        this.error = error.response ? error.response.data : 'Error creating post';\r\n        console.error(error);\r\n      }\r\n    },\r\n    async createComment(postId) {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n          this.error = 'You must be logged in to comment';\r\n          return;\r\n        }\r\n        const response = await axios.post(`https://localhost:7153/api/elearning/posts/${postId}/comments`, \r\n          { content: this.newCommentContent[postId] }, \r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n        const post = this.posts.find(p => p.id === postId);\r\n        post.comments.push(response.data);\r\n        this.$set(this.newCommentContent, postId, '');\r\n      } catch (error) {\r\n        this.error = error.response ? error.response.data : 'Error creating comment';\r\n        console.error(error);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<!-- style css -->\r\n\r\n<style>\r\n\r\n\r\n.mainSection {\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  border-radius: 15px;\r\n  padding: 20px;\r\n  background-color: white;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.header {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.post-form {\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.textarea {\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n}\r\n\r\n.comment-form {\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.btn {\r\n  align-self: flex-end;\r\n  padding: 10px 20px;\r\n  border-radius: 5px;\r\n  background-color: #0047AB;\r\n  color: white;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.btn:hover {\r\n  background-color: #6495ED;\r\n}\r\n\r\n.error {\r\n  color: red;\r\n  margin-bottom: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.post {\r\n  background-color: white;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.post-content {\r\n  font-size: 15px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.post-meta {\r\n  font-size: 12px;\r\n  color: lightgray;\r\n}\r\n\r\n.comment {\r\n  background-color: white;\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n  margin-top: 10px;\r\n}\r\n\r\n.comment-content {\r\n  font-size: 14px;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.comment-meta {\r\n  font-size: 12px;\r\n  color: lightgray;\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAa;gCACtBC,mBAAA,CAAc,YAAV,OAAK;gCAGPA,mBAAA,CAAwC;EAAhCC,IAAI,EAAC;AAAQ,GAAC,WAAS;;EALrCC,GAAA;EAOsBH,KAAK,EAAC;;mBAP5B;mBAAA;gCAaQC,mBAAA,CAAwC;EAAhCC,IAAI,EAAC;AAAQ,GAAC,WAAS;;uBAZrCE,mBAAA,CAmBM,OAnBNC,UAmBM,GAlBJC,UAAc,EACdL,mBAAA,CAGO;IAHAM,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAHjBC,cAAA,KAAAC,IAAA,KAG2BC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;sBAC/BT,mBAAA,CAA2E;IAJjF,uBAAAO,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAIyBC,KAAA,CAAAC,cAAc,GAAAF,MAAA;IAAEG,WAAW,EAAC;iDAA5BF,KAAA,CAAAC,cAAc,E,GACjCE,UAAwC,C,4BAE/BH,KAAA,CAAAI,KAAK,I,cAAhBd,mBAAA,CAAiD,OAAjDe,UAAiD,EAAAC,gBAAA,CAAdN,KAAA,CAAAI,KAAK,oBAP5CG,mBAAA,iB,kBAQIjB,mBAAA,CAWMkB,SAAA,QAnBVC,WAAA,CAQwBT,KAAA,CAAAU,KAAK,EAAbC,IAAI;yBAAhBrB,mBAAA,CAWM;MAXsBD,GAAG,EAAEsB,IAAI,CAACC,EAAE;MAAE1B,KAAK,EAAC;QAC9CC,mBAAA,CAAyB,WAAAmB,gBAAA,CAAnBK,IAAI,CAACE,OAAO,kBAClB1B,mBAAA,CAAqF,eAA9E,qBAAmB,GAAAmB,gBAAA,CAAGK,IAAI,CAACG,IAAI,CAACC,SAAS,IAAG,QAAM,GAAAT,gBAAA,CAAGK,IAAI,CAACK,SAAS,kBAC1E7B,mBAAA,CAGO;MAHAM,QAAM,EAXnBE,cAAA,CAAAI,MAAA,IAW6BF,QAAA,CAAAoB,aAAa,CAACN,IAAI,CAACC,EAAE;wBAC1CzB,mBAAA,CAA4F;MAZpG,uBAAAY,MAAA,IAY2BC,KAAA,CAAAkB,iBAAiB,CAACP,IAAI,CAACC,EAAE,IAAAb,MAAA;MAAGG,WAAW,EAAC;4BAZnEiB,UAAA,I,cAY2BnB,KAAA,CAAAkB,iBAAiB,CAACP,IAAI,CAACC,EAAE,G,GAC5CQ,UAAwC,C,kCAbhDC,UAAA,I,kBAeM/B,mBAAA,CAGMkB,SAAA,QAlBZC,WAAA,CAe6BE,IAAI,CAACW,QAAQ,EAAxBC,OAAO;2BAAnBjC,mBAAA,CAGM;QAHiCD,GAAG,EAAEkC,OAAO,CAACX,EAAE;QAAE1B,KAAK,EAAC;UAC5DC,mBAAA,CAA4B,WAAAmB,gBAAA,CAAtBiB,OAAO,CAACV,OAAO,kBACrB1B,mBAAA,CAA2F,eAApF,qBAAmB,GAAAmB,gBAAA,CAAGiB,OAAO,CAACT,IAAI,CAACC,SAAS,IAAG,QAAM,GAAAT,gBAAA,CAAGiB,OAAO,CAACP,SAAS,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}