{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { format } from 'date-fns';\nexport default {\n  name: 'HomePage',\n  data() {\n    return {\n      posts: [],\n      newPostContent: '',\n      newCommentContent: {},\n      error: ''\n    };\n  },\n  async created() {\n    await this.fetchPosts();\n  },\n  methods: {\n    formatDate(date) {\n      return format(new Date(date), ' HH:mm dd.MM.yyyy');\n    },\n    async fetchPosts() {\n      try {\n        const response = await axios.get('https://localhost:7153/api/elearning/posts');\n        this.posts = response.data;\n      } catch (error) {\n        this.error = 'Error fetching posts';\n        console.error(error);\n      }\n    },\n    async createPost() {\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          this.error = 'You must be logged in to create a post';\n          return;\n        }\n        const response = await axios.post('https://localhost:7153/api/elearning/posts', {\n          Content: this.newPostContent\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.posts.push(response.data);\n        this.newPostContent = '';\n      } catch (error) {\n        this.error = error.response ? error.response.data : 'Error creating post';\n        console.error(error);\n      }\n    },\n    async createComment(postId) {\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          this.error = 'You must be logged in to comment';\n          return;\n        }\n        const response = await axios.post(`https://localhost:7153/api/elearning/posts/${postId}/comments`, {\n          content: this.newCommentContent[postId]\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const post = this.posts.find(p => p.id === postId);\n        post.comments.push(response.data);\n        this.$set(this.newCommentContent, postId, '');\n      } catch (error) {\n        this.error = error.response ? error.response.data : 'Error creating comment';\n        console.error(error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","format","name","data","posts","newPostContent","newCommentContent","error","created","fetchPosts","methods","formatDate","date","Date","response","get","console","createPost","token","localStorage","getItem","post","Content","headers","Authorization","push","createComment","postId","content","find","p","id","comments","$set"],"sources":["C:\\Users\\Damian\\Desktop\\vue\\elearning-frontend\\src\\components\\Home.vue"],"sourcesContent":["<template>\r\n  <div class=\"mainSection\">\r\n    <h1>Posty</h1>\r\n    <form @submit.prevent=\"createPost\">\r\n      <textarea v-model=\"newPostContent\" placeholder=\"Napisz post...\"></textarea>\r\n      <button type=\"submit\">Opublikuj</button>\r\n    </form>\r\n    <div v-if=\"error\" class=\"error\">{{ error }}</div>\r\n    <div v-for=\"post in posts\" :key=\"post.id\" class=\"post\">\r\n      <p>{{ post.content }}</p>\r\n      <small>Opublikowano przez {{ post.user.firstName }} dnia {{ formatDate(post.createdAt) }}</small>\r\n      <form @submit.prevent=\"createComment(post.id)\">\r\n        <textarea v-model=\"newCommentContent[post.id]\" placeholder=\"Napisz komentarz...\"></textarea>\r\n        <button type=\"submit\">Opublikuj</button>\r\n      </form>\r\n      <div v-for=\"comment in post.comments\" :key=\"comment.id\" class=\"comment\">\r\n        <p>{{ comment.content }}</p>\r\n        <small>Skomentowano przez {{ comment.user.firstName }} dnia {{ formatDate(comment.createdAt) }}</small>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { format } from 'date-fns';\r\n\r\nexport default {\r\n  name:'HomePage',\r\n  data() {\r\n    return {\r\n      posts: [],\r\n      newPostContent: '',\r\n      newCommentContent: {},\r\n      error: ''\r\n    };\r\n  },\r\n  async created() {\r\n    await this.fetchPosts();\r\n  },\r\n  methods: {\r\n    formatDate(date) {\r\n      return format(new Date(date), ' HH:mm dd.MM.yyyy')\r\n    },\r\n    async fetchPosts() {\r\n      try {\r\n        const response = await axios.get('https://localhost:7153/api/elearning/posts');\r\n        this.posts = response.data;\r\n      } catch (error) {\r\n        this.error = 'Error fetching posts';\r\n        console.error(error);\r\n      }\r\n    },\r\n    async createPost() {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n          this.error = 'You must be logged in to create a post';\r\n          return;\r\n        }\r\n        const response = await axios.post('https://localhost:7153/api/elearning/posts', \r\n          {Content: this.newPostContent }, \r\n          {headers: {Authorization: `Bearer ${token}` } }\r\n          );\r\n        this.posts.push(response.data);\r\n        this.newPostContent = '';\r\n      } catch (error) {\r\n        this.error = error.response ? error.response.data : 'Error creating post';\r\n        console.error(error);\r\n      }\r\n    },\r\n    async createComment(postId) {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n          this.error = 'You must be logged in to comment';\r\n          return;\r\n        }\r\n        const response = await axios.post(`https://localhost:7153/api/elearning/posts/${postId}/comments`, \r\n          { content: this.newCommentContent[postId] }, \r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n        const post = this.posts.find(p => p.id === postId);\r\n        post.comments.push(response.data);\r\n        this.$set(this.newCommentContent, postId, '');\r\n      } catch (error) {\r\n        this.error = error.response ? error.response.data : 'Error creating comment';\r\n        console.error(error);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<!-- style css -->\r\n\r\n<style>\r\n\r\n\r\n.mainSection {\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  border-radius: 15px;\r\n  padding: 20px;\r\n  background-color: white;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n  margin: 150px auto auto auto;\r\n}\r\n\r\n.header {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.post-form {\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.textarea {\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  resize: none;\r\n  margin: 20px auto auto auto;\r\n}\r\n\r\n.comment-form {\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 20px;\r\n}\r\n\r\nbutton {\r\n  align-self: flex-end;\r\n  padding: 10px 20px;\r\n  border-radius: 5px;\r\n  background-color: #0047AB;\r\n  color: white;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #6495ED;\r\n}\r\n\r\n.error {\r\n  color: red;\r\n  margin-bottom: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.post {\r\n  background-color: white;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.post-content {\r\n  font-size: 15px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.post-meta {\r\n  font-size: 12px;\r\n  color: lightgray;\r\n}\r\n\r\n.comment {\r\n  background-color: white;\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n  margin-top: 10px;\r\n}\r\n\r\n.comment-content {\r\n  font-size: 14px;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.comment-meta {\r\n  font-size: 12px;\r\n  color: lightgray;\r\n}\r\n</style>"],"mappings":";AAwBA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,MAAK,QAAS,UAAU;AAEjC,eAAe;EACbC,IAAI,EAAC,UAAU;EACfC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,cAAc,EAAE,EAAE;MAClBC,iBAAiB,EAAE,CAAC,CAAC;MACrBC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACC,UAAU,CAAC,CAAC;EACzB,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAACC,IAAI,EAAE;MACf,OAAOX,MAAM,CAAC,IAAIY,IAAI,CAACD,IAAI,CAAC,EAAE,mBAAmB;IACnD,CAAC;IACD,MAAMH,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAMK,QAAO,GAAI,MAAMd,KAAK,CAACe,GAAG,CAAC,4CAA4C,CAAC;QAC9E,IAAI,CAACX,KAAI,GAAIU,QAAQ,CAACX,IAAI;MAC5B,EAAE,OAAOI,KAAK,EAAE;QACd,IAAI,CAACA,KAAI,GAAI,sBAAsB;QACnCS,OAAO,CAACT,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IACD,MAAMU,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAMC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,IAAI,CAACF,KAAK,EAAE;UACV,IAAI,CAACX,KAAI,GAAI,wCAAwC;UACrD;QACF;QACA,MAAMO,QAAO,GAAI,MAAMd,KAAK,CAACqB,IAAI,CAAC,4CAA4C,EAC5E;UAACC,OAAO,EAAE,IAAI,CAACjB;QAAe,CAAC,EAC/B;UAACkB,OAAO,EAAE;YAACC,aAAa,EAAE,UAAUN,KAAK;UAAG;QAAE,CAC9C,CAAC;QACH,IAAI,CAACd,KAAK,CAACqB,IAAI,CAACX,QAAQ,CAACX,IAAI,CAAC;QAC9B,IAAI,CAACE,cAAa,GAAI,EAAE;MAC1B,EAAE,OAAOE,KAAK,EAAE;QACd,IAAI,CAACA,KAAI,GAAIA,KAAK,CAACO,QAAO,GAAIP,KAAK,CAACO,QAAQ,CAACX,IAAG,GAAI,qBAAqB;QACzEa,OAAO,CAACT,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IACD,MAAMmB,aAAaA,CAACC,MAAM,EAAE;MAC1B,IAAI;QACF,MAAMT,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,IAAI,CAACF,KAAK,EAAE;UACV,IAAI,CAACX,KAAI,GAAI,kCAAkC;UAC/C;QACF;QACA,MAAMO,QAAO,GAAI,MAAMd,KAAK,CAACqB,IAAI,CAAC,8CAA8CM,MAAM,WAAW,EAC/F;UAAEC,OAAO,EAAE,IAAI,CAACtB,iBAAiB,CAACqB,MAAM;QAAE,CAAC,EAC3C;UAAEJ,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUN,KAAK;UAAG;QAAE,CAClD,CAAC;QACD,MAAMG,IAAG,GAAI,IAAI,CAACjB,KAAK,CAACyB,IAAI,CAACC,CAAA,IAAKA,CAAC,CAACC,EAAC,KAAMJ,MAAM,CAAC;QAClDN,IAAI,CAACW,QAAQ,CAACP,IAAI,CAACX,QAAQ,CAACX,IAAI,CAAC;QACjC,IAAI,CAAC8B,IAAI,CAAC,IAAI,CAAC3B,iBAAiB,EAAEqB,MAAM,EAAE,EAAE,CAAC;MAC/C,EAAE,OAAOpB,KAAK,EAAE;QACd,IAAI,CAACA,KAAI,GAAIA,KAAK,CAACO,QAAO,GAAIP,KAAK,CAACO,QAAQ,CAACX,IAAG,GAAI,wBAAwB;QAC5Ea,OAAO,CAACT,KAAK,CAACA,KAAK,CAAC;MACtB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}